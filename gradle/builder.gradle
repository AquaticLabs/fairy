apply plugin: "java-library"
apply plugin: "com.github.johnrengelman.shadow"

sourceCompatibility = 1.8
targetCompatibility = 1.8

ext {
    archieveName = project.name
}

test {
    useJUnitPlatform()
}

// setup directory per version
project.afterEvaluate(p -> {
    var directoryProperty = tasks.shadowJar.destinationDirectory
    var jarProperty = tasks.jar.destinationDirectory
    var directory = directoryProperty.get().dir(p.version.toString())
    directoryProperty.set(directory)
    jarProperty.set(directory)

    tasks.jar.archiveFileName.set("${p.ext.archieveName}-sources.jar")
    tasks.shadowJar.archiveFileName.set("${p.ext.archieveName}.jar")

    task copyJarToLocal(type: Copy) {
        outputs.cacheIf { true }

        def file = tasks.shadowJar.archiveFile.get().asFile.toPath()

        from(file)
        into(rootProject.file("libs/local"))
        rename(file.getFileName().toString(), "io.fairyproject.${tasks.shadowJar.archiveFileName.get()}")
    }
    tasks.shadowJar.finalizedBy(copyJarToLocal)

    shadowJar {
        // XSeries
        exclude("com/cryptomorin/xseries/messages/*")

        relocate("com.github.retrooper.packetevents", "io.fairyproject.protocol.packetevents")
        relocate("com.cryptomorin.xseries", "io.fairyproject.bukkit.xseries")

        relocate "net.kyori", relocate + "kyori"
    }
})

shadowJar {
    configurations = [project.configurations.runtimeClasspath]
}