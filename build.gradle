/*
 * MIT License
 *
 * Copyright (c) 2021 Imanity
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
//file:noinspection GroovyAssignabilityCheck

plugins {
    id "maven-publish"
    id "io.freefair.aspectj.post-compile-weaving" version "6.1.0" apply false
    id "com.github.johnrengelman.shadow" version "7.0.0" apply false
    id "com.gradle.plugin-publish" version "0.14.0" apply false
}

allprojects {
    if (isNotJavaProject(project)) {
        project.tasks.all { task -> task.enabled = false }
        return
    }
    group = "io.fairyproject"
    version = "0.5b68"

    repositories {
        mavenCentral()
        maven {
            name = "sonatype-oss-snapshots"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven { url "https://maven.imanity.dev/repository/imanity-libraries/" }
        maven { url "https://nexus.funkemunky.cc/content/repositories/releases/" }
        maven { url "https://jitpack.io" }
        maven { url "https://hub.spigotmc.org/nexus/content/repositories/snapshots/" }
        maven { url "https://repo.viaversion.com/" }
        maven { url "https://ci.athion.net/job/FastAsyncWorldEdit/ws/mvn/" }
        maven { url "https://maven.sk89q.com/repo/" }
        flatDir { dir("${this.projectDir.path}/libs") }
    }

    ext {
        relocate = "org.imanity.framework.libs."

        // Dependencies
        AspectJRuntime = "org.aspectj:aspectjrt:" + findProperty("aspectj.version")

        JacksonCore = "com.fasterxml.jackson.core:jackson-core:" + findProperty("jackson.version")
        JacksonDataBind = "com.fasterxml.jackson.core:jackson-databind:" + findProperty("jackson.version")
        JacksonAnnotations = "com.fasterxml.jackson.core:jackson-annotations:" + findProperty("jackson.version")
        JacksonJsr310 = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:" + findProperty("jackson.version")

        HikariCP = "com.zaxxer:HikariCP:3.4.5"
        MongoDB_driver_sync = "org.mongodb:mongodb-driver-sync:4.0.4"
        Mongojack = "org.mongojack:mongojack:" + findProperty("mongojack.version")
        Redisson = "org.redisson:redisson:3.13.2"
    }
}

subprojects {
    if (isNotJavaProject(project)) {
        project.tasks.all { task -> task.enabled = false }
        return
    }

    apply from: "${rootDir}/gradle/module.gradle"
}

if (findProperty("deploy.imanityLibraries") == "true") {
    publishing {
        publications {
            shadow(MavenPublication) { publication ->
                artifactId = "framework"
                groupId = "io.fairyproject"
                version = project.version

                System.out.println("| version = ${version}")

                def files = file("$buildDir/libs").listFiles()
                if (files != null) {
                    for (file in files) {
                        if (file.name.endsWith(".jar")) {
                            artifact(file) {
                                String fileName = file.getName()
                                int pos = fileName.lastIndexOf(".")
                                if (pos > 0 && pos < (fileName.length() - 1)) {
                                    fileName = fileName.substring(0, pos)
                                }
                                classifier = fileName

                                System.out.println("| module = $classifier ($file.name)")
                            }
                        }
                    }
                }
                pom {
                    name = "Fairy " + project.name
                    description = "Fairy is a compat & open-sourced Java Framework with useful features"
                }
            }
        }
        repositories {
            maven {
                credentials {
                    username = findProperty("imanityLibrariesUsername")
                    password = findProperty("imanityLibrariesPassword")
                }
                url "https://maven.imanity.dev/repository/imanity-libraries/"
            }
        }
    }
}

static boolean isNotJavaProject(Project project) {
    return project.file("build.gradle") == null
}